dependencies:
  sshkey:
    - test
  gem:
    - rerun
    - bundle
  apk:
    - less
  apt:
    - less
    - libssh2-1-dev
  custom:
    - shards install
    - bundle config --local path vendor/bundle
    - bundle
    - true
    - echo "Initializing the cloud..."
  dir:
    - build
    - build/darwin_arm64
    - build/darwin_amd64
    - build/linux_x86_64
    - build/linux_armv6k
forwards:
  ftw: dirsftw
actions:
  run: crystal run ops.cr --
  debug: OPS_DEBUG_OUTPUT=true crystal run -d --error-trace ops.cr --
  run-watch:
    command: rerun --no-notify -qb -p 'src/**/*.{cr,yml,json}' -- ops run
    alias: rw
  test: crystal spec
  test-watch:
    command: rerun --no-notify -qb -p 'src/**/*.{cr,yml,json}' -- ops test
    alias: tw
  test-e2e:
    command: ops build && SSH_ASKPASS= bundle exec rspec
    alias: e2e
  test-e2e-watch:
    command: rerun --no-notify -qb -p '**/*.{cr,rb,yml,json}' -- ops e2e
    alias: ew
  lint: rubocop --autocorrect
  build: crystal build ops.cr -o build/ops
  build-mac-arm64: ops build --cross-compile --target arm64-apple-darwin -o build/darwin_arm64/ops
  build-mac-amd64: ops build --cross-compile --target x86_64-apple-darwin -o build/darwin_amd64/ops
  build-linux-amd64: ops build --cross-compile --target x86_64-pc-linux-gnu -o build/linux_x86_64/ops
  build-linux-pi3: ops build --cross-compile --target armv6k-unknown-linux-gnueabihf -o build/linux_armv6k/ops
  build-all: |-
    ops build-mac-arm64
    ops build-mac-amd64
    ops build-linux-amd64
  get-build-target: "${LLVM_CONFIG:-llvm-config} --host-target"
  install:
    command: |-
      echo 1>&2 "Installing 'build/ops' into '$INSTALL_DIR'..."
      ops build && cp build/ops "$INSTALL_DIR"
    alias: bi
options:
  environment:
    INSTALL_DIR: "$HOME/bin/"
